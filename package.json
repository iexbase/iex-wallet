{
    "name": "iexwallet",
    "description": "Secure Tron Wallet",
    "version": "1.1.3",
    "author": {
        "name": "Shamsudin Serderov",
        "email": "iexbase@protonmail.com"
    },
    "keywords": [
        "blockchain",
        "tron",
        "tron-wallet",
        "crypocurrency",
        "cryptowallet",
        "wallet",
        "tron-web"
    ],
    "title": "iEXWallet",
    "repository": {
        "url": "git://github.com/iexbase/iex-wallet.git",
        "type": "git"
    },
    "bugs": {
        "url": "https://github.com/iexbase/iex-wallet/issues"
    },
    "homepage": "https://tron.iexbase.com",
    "license": "MIT",
    "scripts": {
        "postinstall": "npm run postinstall:electron && npx electron-builder install-app-deps",
        "postinstall:web": "node ./bin/postinstall-web",
        "postinstall:electron": "node ./bin/postinstall",
        "ng": "ng",
        "start": "npm run postinstall:electron && npm-run-all -p ng:serve electron:serve",
        "build": "npm run postinstall:electron && npm run electron:serve-tsc && npm run electron:tsc",
        "build:dev": "npm run build && npm run env:dev && ng build",
        "build:prod": "npm run build && npm run env:prod && ng build --prod --aot --build-optimizer",
        "ng:serve": "ng serve",
        "ng:serve:web": "npm run postinstall:web && ng serve -o",
        "electron:serve-tsc": "tsc -p tsconfig.json",
        "electron:tsc": "tsc main.ts",
        "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:serve-tsc && npm run env:dev && electron . --serve",
        "build:linux-release": "npm run build:prod && npx electron-builder build --linux",
        "build:windows-release": "npm run build:prod && npx electron-builder build --windows",
        "build:mac-release": "npm run build:prod && npx electron-builder build --mac",
        "test": "npm run postinstall:web && ng test",
        "e2e": "npm run postinstall:web && ng e2e",
        "tslint-check": "tslint-config-prettier-check ./tslint.json",
        "fix:tslint": "tslint --fix --project . && tslint --fix '{src}/**/*.ts'",
        "fix:prettier": "prettier --write '{*,**/*}.{js,ts,md,json,scss}'",
        "extract": "ngx-translate-extract -i ./src -o ./src/assets/i18n/{ru,en}.json",
        "env:prod": "rm -f src/environments/index.ts && cp src/environments/prod.ts src/environments/index.ts \n\n# Environment set to: prod\n\n",
        "env:dev": "rm -f src/environments/index.ts && cp src/environments/dev.ts src/environments/index.ts \n\n# Environment set to: dev\n\n",
        "env:e2e": "rm -f src/environments/index.ts && cp src/environments/e2e.ts src/environments/index.ts \n\n# Environment set to: e2e\n\n",
        "test:coverage": "ng test --code-coverage"
    },
    "private": true,
    "main": "main.js",
    "dependencies": {
        "@angular/animations": "~7.2.0",
        "@angular/cdk": "~7.2.1",
        "@angular/common": "~7.2.0",
        "@angular/compiler": "~7.2.0",
        "@angular/core": "~7.2.0",
        "@angular/flex-layout": "~7.0.0-beta.22",
        "@angular/forms": "~7.2.0",
        "@angular/material": "~7.2.1",
        "@angular/platform-browser": "~7.2.0",
        "@angular/platform-browser-dynamic": "~7.2.0",
        "@angular/router": "~7.2.0",
        "@angular/service-worker": "^7.2.0",
        "@ngrx/entity": "^7.0.0",
        "@ngrx/store": "^7.0.0",
        "@ngx-translate/core": "^11.0.1",
        "@ngx-translate/http-loader": "^4.0.0",
        "@swimlane/ngx-charts": "^10.0.0",
        "@types/node": "~10.12.18",
        "angular-highcharts": "7.0.2",
        "angularx-qrcode": "^1.5.1",
        "bignumber.js": "^8.0.1",
        "bip39": "^2.5.0",
        "core-js": "^2.6.1",
        "crypto-js": "^3.1.9-1",
        "electron-store": "^2.0.0",
        "elliptic": "^6.4.1",
        "hash.js": "^1.1.7",
        "hdkey": "^1.1.0",
        "highcharts": "6.2.0",
        "js-base64": "^2.5.0",
        "lodash": "^4.17.11",
        "moment": "^2.23.0",
        "ng-lottie": "^0.3.2",
        "ngx-infinite-scroll": "^7.0.1",
        "ngx-mask": "^7.3.3",
        "ngx-moment": "^3.3.0",
        "ngx-perfect-scrollbar": "^7.1.0",
        "ngx-store": "^2.1.0",
        "ngx-webstorage": "^3.0.0-beta.14",
        "rxjs": "~6.3.3",
        "rxjs-compat": "^6.3.3",
        "time-ago-pipe": "^1.3.2",
        "tronweb": "^2.1.26",
        "ts-md5": "^1.2.4",
        "tslib": "^1.9.3",
        "uuid": "^3.3.2",
        "web-animations-js": "^2.3.1",
        "zone.js": "~0.8.26"
    },
    "devDependencies": {
        "@angular-devkit/build-angular": "~0.12.0",
        "@angular/cli": "~7.2.0",
        "@angular/compiler-cli": "~7.2.0",
        "@angular/language-service": "~7.2.0",
        "@ngrx/store-devtools": "^7.0.0",
        "@types/bip39": "^2.4.1",
        "@types/conf": "^2.1.0",
        "@types/crypto-js": "^3.1.43",
        "@types/electron-store": "^1.3.0",
        "@types/elliptic": "^6.4.1",
        "@types/hdkey": "^0.7.0",
        "@types/highcharts": "5.0.34",
        "@types/jasmine": "^3.3.5",
        "@types/jasminewd2": "~2.0.6",
        "@types/js-base64": "^2.3.1",
        "@types/lodash": "^4.14.119",
        "@types/uuid": "^3.4.4",
        "codelyzer": "~4.5.0",
        "electron": "^9.4.0",
        "electron-builder": "^20.38.4",
        "electron-debug": "^2.0.0",
        "electron-reload": "^1.4.0",
        "jasmine-core": "~3.3.0",
        "jasmine-spec-reporter": "~4.2.1",
        "karma": "~3.1.4",
        "karma-chrome-launcher": "~2.2.0",
        "karma-coverage-istanbul-reporter": "~2.0.4",
        "karma-jasmine": "~2.0.1",
        "karma-jasmine-html-reporter": "^1.4.0",
        "ngrx-store-freeze": "^0.2.4",
        "ngrx-store-logger": "^0.2.2",
        "npm-run-all": "^4.1.5",
        "npx": "^10.2.0",
        "prettier": "^1.15.3",
        "protractor": "^5.4.2",
        "ts-node": "~7.0.1",
        "tslint": "~5.12.0",
        "tslint-config-prettier": "^1.17.0",
        "tslint-plugin-prettier": "^2.0.1",
        "typescript": "~3.2.2",
        "wait-on": "^3.2.0"
    },
    "prettier": {
        "singleQuote": true
    }
}
